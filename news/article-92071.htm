<!doctype html>
<html class="no-js" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnyanpasu.github.io/news/article-92071.htm" />
    <meta charset="utf-8">
    <!--====== Title ======-->
    <title>Spring Security实现基于RBAC的权限表达式动态访问控制</title>
        <meta name="description" content="昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Securit" />
        <link rel="icon" href="/assets/website/img/clashnyanpasu/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="ClashNyanpasu官网节点站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnyanpasu.github.io/news/article-92071.htm" />
    <meta property="og:site_name" content="ClashNyanpasu官网节点站" />
    <meta property="og:title" content="Spring Security实现基于RBAC的权限表达式动态访问控制" />
    <meta property="og:image" content="https://clashnyanpasu.github.io/uploads/20240623/70a6029b4b18b501f935493b3e7dc213.webp" />
        <meta property="og:release_date" content="2025-04-09T09:17:40" />
    <meta property="og:updated_time" content="2025-04-09T09:17:40" />
        <meta property="og:description" content="昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Securit" />
        
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--====== Magnific Popup CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/magnific-popup.css">
    <!--====== Slick CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/slick.css">
    <!--====== Line Icons CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/LineIcons.css">
    <!--====== Bootstrap CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/bootstrap.min.css">
    <!--====== Default CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/default.css">
    <!--====== Style CSS ======-->
    <link rel="stylesheet" href="/assets/website/css/clashnyanpasu/style.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Security实现基于RBAC的权限表达式动态访问控制">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7F56WL29Y8"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7F56WL29Y8');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--====== PRELOADER PART START ======-->
    <div class="preloader">
        <div class="loader">
            <div class="ytp-spinner">
                <div class="ytp-spinner-container">
                    <div class="ytp-spinner-rotator">
                        <div class="ytp-spinner-left">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                        <div class="ytp-spinner-right">
                            <div class="ytp-spinner-circle"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--====== PRELOADER PART ENDS ======-->
    <!--====== NAVBAR TWO PART START ======-->
    <section class="navbar-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <nav class="navbar navbar-expand-lg">
                                                <a class="navbar-brand top" href="/">
                            Clash Nyanpasu                        </a>
                                                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarTwo" aria-controls="navbarTwo" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                            <span class="toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse sub-menu-bar" id="navbarTwo">
                            <ul class="navbar-nav m-auto">
                                                                <li class="nav-item"><a href="/">首页</a></li>
                                                                <li class="nav-item"><a href="/free-nodes/">免费节点</a></li>
                                                                <li class="nav-item"><a href="/paid-subscribe/">推荐机场</a></li>
                                                                <li class="nav-item"><a href="/client.htm">客户端</a></li>
                                                                <li class="nav-item"><a href="/news/">新闻资讯</a></li>
                                                            </ul>
                        </div>

                    </nav> <!-- navbar -->
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </section>
    <!--====== NAVBAR TWO PART ENDS ======-->
    <!--====== SLIDER PART START ======-->
    <section id="home" class="slider_area">
        <div id="carouselThree" class="carousel slide sub-page" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="slider-content">
                                    <h1 class="title">Spring Security实现基于RBAC的权限表达式动态访问控制</h1>
                                    <p class="text">
                                        <a href="/">首页</a> / 
                                        <a href="/news/">新闻资讯</a> / 
                                        <span>正文</span>
                                    </p>
                                </div>
                            </div>
                        </div> <!-- row -->
                    </div> <!-- container -->
                    <div class="slider-image-box d-none d-lg-flex align-items-end">
                        <div class="slider-image">
                            <img src="/assets/website/img/clashnyanpasu/slider/1.png" alt="Hero">
                        </div> <!-- slider-imgae -->
                    </div> <!-- slider-imgae box -->
                </div> <!-- carousel-item -->
            </div>
        </div>
    </section>
    <!--====== SLIDER PART ENDS ======-->
    <!--====== ABOUT PART START ======-->
    <section id=about class=about-area>
        <div class=container>
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>昨天有个粉丝加了我，问我如何实现类似shiro的资源权限表达式的访问控制。我以前有一个小框架用的就是shiro，权限控制就用了资源权限表达式，所以这个东西对我不陌生，但是在Spring Security中我并没有使用过它，不过我认为Spring Security可以实现这一点。是的，我找到了实现它的方法。</p> <h3 id="资源权限表达式">资源权限表达式</h3> <p>说了这么多，我觉得应该解释一下什么叫资源权限表达式。权限控制的核心就是清晰地表达出特定资源的某种操作，一个格式良好好的权限声明可以清晰表达出用户对该资源拥有的操作权限。</p> <p>通常一个资源在系统中的标识是唯一的，比如<strong>User</strong>用来标识用户，<strong>ORDER</strong>标识订单。不管什么资源大都可以归纳出以下这几种操作</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/1cc8c293aa89190e1ee0e7cc62d550d2.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>在 shiro权限声明通常对上面的这种资源操作关系用冒号分隔的方式进行表示。例如读取用户信息的操作表示为<code>USER:READ</code>，甚至还可以更加细一些，用<code>USER:READ:123</code>表示读取<strong>ID</strong>为<code>123</code>的用户权限。</p> <p>资源操作定义好了，再把它和角色关联起来不就是基于RBAC的权限资源控制了吗？就像下面这样：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2af86d5f5db3c9aa8722995ad3afd257.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>这样资源和角色的关系可以进行CRUD操作进行动态绑定。</p> <h3 id="spring-security中的实现">Spring Security中的实现</h3> <p>资源权限表达式动态权限控制在Spring Security也是可以实现的。首先开启方法级别的注解安全控制。</p> <pre><code class="language-java">/**  * 开启方法安全注解  *  * @author felord.cn  */ @EnableGlobalMethodSecurity(prePostEnabled = true,         securedEnabled = true,         jsr250Enabled = true) public class MethodSecurityConfig {      }</code></pre> <h4 id="methodsecurityexpressionhandler">MethodSecurityExpressionHandler</h4> <p><code>MethodSecurityExpressionHandler</code> 提供了一个对方法进行安全访问的门面扩展。它的实现类<code>DefaultMethodSecurityExpressionHandler</code>更是提供了针对方法的一系列扩展接口，这里我总结了一下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/69fd01e989f655213d98dc3a54c4a116.jpg" alt="Spring Security实现基于RBAC的权限表达式动态访问控制"></p> <p>这里的<code>PermissionEvaluator</code>正好可以满足需要。</p> <h5 id="permissionevaluator">PermissionEvaluator</h5> <p><code>PermissionEvaluator</code> 接口抽象了对一个用户是否有权限访问一个特定的领域对象的评估过程。</p> <pre><code class="language-java">public interface PermissionEvaluator extends AopInfrastructureBean {    	boolean hasPermission(Authentication authentication,                            Object targetDomainObject, Object permission);    	boolean hasPermission(Authentication authentication,                            Serializable targetId, String targetType, Object permission);  }</code></pre> <p>这两个方法仅仅参数列表不同，这些参数的含义为：</p> <ul> <li><code>authentication</code> 当前用户的认证信息，持有当前用户的角色权限。</li> <li><code>targetDomainObject</code> 用户想要访问的目标领域对象，例如上面的<code>USER</code>。</li> <li><code>permission</code> 这个当前方法设定的目标领域对象的权限，例如上面的<code>READ</code>。</li> <li><code>targetId</code> 这种是对上面<code>targetDomainObject</code> 的具体化，比如ID为<code>123</code>的<code>USER</code>，我觉得还可以搞成租户什么的。</li> <li><code>targetType</code> 是为了配合<code>targetId</code> 。</li> </ul> <blockquote> <p>第一个方法是用来实现<code>USER:READ</code>的；第二个方法是用来实现<code>USER:READ:123</code>的。</p> </blockquote> <h4 id="思路以及实现">思路以及实现</h4> <p><code>targetDomainObject:permission</code>不就是<code>USER:READ</code>的抽象吗？只要找出<code>USER:READ</code>对应的角色集合，和当前用户持有的角色进行比对，它们存在交集就证明用户有权限访问。借着这个思路胖哥实现了一个<code>PermissionEvaluator</code>:</p> <pre><code class="language-java">/**  * 资源权限评估  *   * @author felord.cn  */ public class ResourcePermissionEvaluator implements PermissionEvaluator {     private final BiFunction&lt;String, String, Collection&lt;? extends GrantedAuthority&gt;&gt; permissionFunction;      public ResourcePermissionEvaluator(BiFunction&lt;String, String, Collection&lt;? extends GrantedAuthority&gt;&gt; permissionFunction) {         this.permissionFunction = permissionFunction;     }      @Override     public boolean hasPermission(Authentication authentication, Object targetDomainObject, Object permission) {         //查询方法标注对应的角色         Collection&lt;? extends GrantedAuthority&gt; resourceAuthorities = permissionFunction.apply((String) targetDomainObject, (String) permission);         // 用户对应的角色         Collection&lt;? extends GrantedAuthority&gt; userAuthorities = authentication.getAuthorities();          // 对比 true 就能访问  false 就不能访问         return userAuthorities.stream().anyMatch(resourceAuthorities::contains);     }      @Override     public boolean hasPermission(Authentication authentication, Serializable targetId, String targetType, Object permission) {         //todo         System.out.println("targetId = " + targetId);         return true;     } }</code></pre> <blockquote> <p>第二个方法没有实现，因为两个差不多，第二个你可以想想具体的使用场景。</p> </blockquote> <h4 id="配置和使用">配置和使用</h4> <p><code>PermissionEvaluator</code> 需要注入到<strong>Spring IoC</strong>，并且<strong>Spring IoC</strong>只能有一个该类型的<strong>Bean</strong>：</p> <pre><code class="language-java">    @Bean     PermissionEvaluator resourcePermissionEvaluator() {         return new ResourcePermissionEvaluator((targetDomainObject, permission) -&gt; {             //TODO 这里形式其实可以不固定             String key = targetDomainObject + ":" + permission;             //TODO  查询 key 和  authority 的关联关系             //  模拟 permission 关联角色   根据key 去查 grantedAuthorities             Set&lt;SimpleGrantedAuthority&gt; grantedAuthorities = new HashSet&lt;&gt;();             grantedAuthorities.add(new SimpleGrantedAuthority("ROLE_ADMIN"));             return "USER:READ".equals(key) ? grantedAuthorities : new HashSet&lt;&gt;();         });     }</code></pre> <p>接下来写个接口，用<code>@PreAuthorize</code>注解标记，然后直接用<code>hasPermission('USER','READ')</code>来静态绑定该接口的访问权限表达式：</p> <pre><code class="language-java">    @GetMapping("/postfilter")     @PreAuthorize("hasPermission('USER','READ')")     public Collection&lt;String&gt; postfilter(){         List&lt;String&gt; list = new ArrayList&lt;&gt;();         list.add("felord.cn");         list.add("码农小胖哥");         list.add("请关注一下");         return list;     }</code></pre> <p>然后定义一个用户：</p> <pre><code class="language-java">    @Bean     UserDetailsService users() {         UserDetails user = User.builder()                 .username("felord")                 .password("123456")       .passwordEncoder(PasswordEncoderFactories.createDelegatingPasswordEncoder()::encode)                 .roles("USER")                 .authorities("ROLE_ADMIN","ROLE_USER")                 .build();         return new InMemoryUserDetailsManager(user);     }</code></pre> <p>接下来肯定是正常能够访问接口的。当你改变了<code>@PreAuthorize</code>中表达式的值或者移除了用户的<code>ROLE_ADMIN</code>权限，再或者<code>USER:READ</code>关联到了其它角色等等，都会返回<code>403</code>。</p> <h5 id="留给你去测试的">留给你去测试的</h5> <p>你可以看看注解改成这样会是什么效果：</p> <pre><code>  @PreAuthorize("hasPermission('1234','USER','READ')")</code></pre> <p>还有这个：</p> <pre><code class="language-java">  @PreAuthorize("hasPermission('USER','READ') or hasRole('ADMIN')")</code></pre> <p>或者让<code>targetId</code>动态化：</p> <pre><code class="language-java">    @PreAuthorize("hasPermission(#id,'USER','READ')")     public Collection&lt;String&gt; postfilter(String id){              }</code></pre> <p></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-91273.htm">动物疫苗的生产原料有哪些呢图片（动物疫苗的生产过程）</a></p>
                                        <p>下一个：<a href="/news/article-92073.htm">宠物上门回收狗狗（宠物上门回收狗狗多少钱）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-4-2-free-subscribe-node.htm" title="「4月2日」最高速度21.6M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐">「4月2日」最高速度21.6M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-4-free-node-subscribe-links.htm" title="「3月4日」最高速度21.8M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐">「3月4日」最高速度21.8M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-71788.htm" title="动物疫苗价格表图片及价格大全图（动物疫苗多少钱一支）">动物疫苗价格表图片及价格大全图（动物疫苗多少钱一支）</a></li>
                        <li class="py-2"><a href="/news/article-78543.htm" title="HCNP Routing&amp;Switching之端口隔离">HCNP Routing&amp;Switching之端口隔离</a></li>
                        <li class="py-2"><a href="/news/article-68496.htm" title="网店卖宠物用品赚钱吗现在怎么样（开网店卖宠物用品在哪里进货）">网店卖宠物用品赚钱吗现在怎么样（开网店卖宠物用品在哪里进货）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-high-speed-nodes.htm" title="「4月4日」最高速度20.6M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐">「4月4日」最高速度20.6M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-88434.htm" title="养猫打预防针多少钱一次（养猫接种疫苗多少钱）">养猫打预防针多少钱一次（养猫接种疫苗多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-81318.htm" title="Python实现学生管理系统">Python实现学生管理系统</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-free-clash-nyanpasu.htm" title="「3月30日」最高速度21.9M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐">「3月30日」最高速度21.9M/S，2025年Clash Nyanpasu每天更新免费节点订阅链接，高速机场推荐</a></li>
                        <li class="py-2"><a href="/news/article-87724.htm" title="国内宠物粮食十大厂家有哪些 国内宠物粮食十大厂家有哪些品牌">国内宠物粮食十大厂家有哪些 国内宠物粮食十大厂家有哪些品牌</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <!--====== FOOTER PART START ======-->
    <section class="footer-area footer-dark">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-6">
                    <div class="copyright text-center mt-35">
                                            <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <p class="text">
                            ClashNyanpasu官网节点站 版权所有 Powered by WordPress
                        </p>
                    </div> <!--  copyright -->
                </div>
            </div> <!-- row -->
        </div> <!-- container -->
    </section>
    <!--====== FOOTER PART ENDS ======-->
    <!--====== BACK TOP TOP PART START ======-->
    <a href="#" class="back-to-top"><i class="lni lni-chevron-up"></i></a>
    <!--====== BACK TOP TOP PART ENDS ======-->
    <!--====== Jquery js ======-->
    <script src="/assets/website/js/frontend/clashnyanpasu/vendor/jquery-1.12.4.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/vendor/modernizr-3.7.1.min.js"></script>
    <!--====== Bootstrap js ======-->
    <script src="/assets/website/js/frontend/clashnyanpasu/popper.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/slick.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/ajax-contact.js"></script>
    <!--====== Isotope js ======-->
    <script src="/assets/website/js/frontend/clashnyanpasu/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/isotope.pkgd.min.js"></script>
    <!--====== Scrolling Nav js ======-->
    <script src="/assets/website/js/frontend/clashnyanpasu/jquery.easing.min.js"></script>
    <script src="/assets/website/js/frontend/clashnyanpasu/scrolling-nav.js"></script>
    <!--====== Main js ======-->
    <script src="/assets/website/js/frontend/clashnyanpasu/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>